@using System.Globalization;
@using CBBW.Areas.Security.ViewModel.Rule;
@model TADARuleVM
@{
    ViewBag.Title = "New TA & DA Rule";
}
<div class="row newTable">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.IsParamBtn);
        @Html.HiddenFor(m => m.IsTransBtn);
        @Html.HiddenFor(m => m.IsSubmitActive);
        @Html.HiddenFor(m => m.TADARule.EffectiveDate)
        @Html.HiddenFor(m => m.TADARule.EffectiveDateDisplay)
        @Html.HiddenFor(m => m.TADARule.CategoryIds)
        @Html.HiddenFor(m => m.TADARule.CategoryText)

        @Html.HiddenFor(m => m.TADARule.PublicTransIDs)
        @Html.HiddenFor(m => m.TADARule.PubTransClassIDs)
        @Html.HiddenFor(m => m.TADARule.CompanyTransIDs)

        @Html.HiddenFor(m => m.TADARule.IsDAActualSpend)
        @Html.HiddenFor(m => m.TADARule.IsLodgingAllowed)
        @Html.HiddenFor(m => m.TADARule.Metro_DAPerDay)
        @Html.HiddenFor(m => m.TADARule.City_DAPerDay)
        @Html.HiddenFor(m => m.TADARule.Town_DAPerDay)
        @Html.HiddenFor(m => m.TADARule.Metro_MaxLodgingExp)
        @Html.HiddenFor(m => m.TADARule.City_MaxLodgingExp)
        @Html.HiddenFor(m => m.TADARule.Town_MaxLodgingExp)
        @Html.HiddenFor(m => m.TADARule.Metro_MaxLocalConv)
        @Html.HiddenFor(m => m.TADARule.City_MaxLocalConv)
        @Html.HiddenFor(m => m.TADARule.Town_MaxLocalConv)

        <div class="fixedElement">
            <div class="col-md-12" style="position: relative;">
                <div class="heading_text_btn mb-4 mt-4">
                    <div class="leftButton">
                        <button id="btnBack" type="button"
                                class="btn btn-primary me-2">
                            @*onclick="window.location.href='@Url.Action("Index", "TADARules", new { Area = "Security" })';">*@
                            <i data-feather="arrow-left-circle"></i>
                            Back
                        </button>
                        <button type="submit" name="Submit" value="create"
                                disabled id="btnSubmit2"
                                class="btn btn-secondary me-2">
                            <i data-feather="upload"></i>
                            Submit
                        </button>
                        <button type="button" id="btnClear" onclick="btnClearClicked()"
                                class="btn btn-white">
                            <i data-feather="x-circle"></i>
                            Clear
                        </button>
                    </div>
                    <h2>TA & DA - RULES</h2>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row d-flex align-items-center mb-3 ">
                        <label class="col-form-label col-md-2">
                            Effective From Date :
                        </label>
                        <div class="col-md-4">
                            <div class="position-relative">
                                <input id="mEffectiveDate" type="date" 
                                       min="@DateTime.Today.ToString("yyyy-MM-dd")"
                                       max="@DateTime.Today.AddMonths(1).ToString("yyyy-MM-dd")"
                                       class="form-control pointer is-invalid valid"
                                       title="Accept Today Or Future One Month">
                                <label id="lblmEffectiveDate" style="width:100px"
                                       class="datelabel">Select Date</label>
                                @*@Html.TextBoxFor(m => m.TADARule.EffectiveDate, "{0:yyyy-MM-dd}",
                                    htmlAttributes: new
                                         {
                                        @class = "form-control pointer isvalidate CustomDateFormat",
                                        type = "date",
                                        onchange = "validatecontrol()",
                                        max = Model.MaxDate,
                                        min = Model.MinDate
                                    })
                                         <label id="TADARule_EffectiveDatelbl" class="datelabel">Select a date</label>*@

                            </div>
                        </div>
                    </div>
                    <div class="row d-flex align-items-center">
                        <label class="col-form-label col-md-2">
                            Entry Date  :
                        </label>
                        <div class="col-md-4">
                            <input type="text" disabled class="form-control" value="@DateTime.Today.ToString("dd/MM/yyyy",CultureInfo.InvariantCulture)" />
                            @*@Html.TextBoxFor(m => m.EntryDate, "{0:dd-MM-yyyy}",
                                htmlAttributes: new { @class = "form-control", disabled = "disabled" })*@
                        </div>
                        <label class="col-form-label col-md-2">
                            Time  :
                        </label>
                        <div class="col-md-4">
                            <input type="text" disabled class="form-control" value="@DateTime.Now.ToString("hh:mm tt")" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="Div1" class="col-12 sectionB">
            <div class="bgColor wid-100 mb-4">
                <ol>
                    <li>
                        Minimum Hours Of Tour Required To Get Half DA:
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.TADARule.MinHoursForHalfDA,
                           htmlAttributes: new
                           {
                               @class = "form-control pointer only-numeric myctrl is-valid",
                               @placeholder = "Hours",
                               @onchange = "validatecontrol()",
                               title = "Value must be 1 - 9"
                           })
                        </div>
                    </li>
                    <li>
                        <span class="d-flex justify-content-start align-items-center infoerror">
                            Pay DA When Destination is More Than (KMS):
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.TADARule.MinKmsForDA,
                                   htmlAttributes: new
                                   {
                                       @class = "form-control pointer only-numeric myctrl is-valid",
                                       @placeholder = "KMS",
                                       @onchange = "validatecontrol()",
                                       title = "Value must be 1 - 99"
                                   })
                            </div>

                        </span>
                    </li>
                    <li>
                        When Company Accommodation Available Lodging Expenses Allowed?
                        @Html.DropDownListFor(m => m.TADARule.LodgingExpOnCompAcco,
                       new[] {
                           new SelectListItem { Text = "Yes", Value = "true" },
                           new SelectListItem { Text = "No", Value = "false" } }, "-",
                       htmlAttributes: new
                       {
                           @class = "form-select pointer myctrl is-valid myctrlw100",
                           @onchange = "validatecontrol()",
                           title = "Accept NO Only",
                       })
                    </li>
                    <li>
                        Local Conveyance Eligible:
                        @Html.DropDownListFor(m => m.TADARule.LocalConvEligibility,
                       new[] {
                           new SelectListItem { Text = "Yes", Value = "true" },
                           new SelectListItem { Text = "No", Value = "false" } }, "-",
                       htmlAttributes: new { @class = "form-select pointer myctrl is-valid myctrlw100", @onchange = "validatecontrol()" })

                    </li>
                    <li>
                        On Deputation Staff Allowed To Go On Tour But Not Eligible For DA Where As Rest Of All
                        Conditions Applicable:
                        @Html.DropDownListFor(m => m.TADARule.DepuStaffDAEligibility,
                       new[] {
                           new SelectListItem { Text = "Yes", Value = "true" },
                           new SelectListItem { Text = "No", Value = "false" } }, "-",
                       htmlAttributes: new { @class = "form-select pointer myctrl is-valid myctrlw100", @onchange = "validatecontrol()" })

                    </li>
                    <li>
                        DA & Extra DA Applicable To Designation “Driver” Or “Senior Driver” When On Tour As Saved In
                        “Material Gate Pass (For
                        Company Transport)” Shall Be Eligible When Return Trip Loaded With Goods More Than 85% Of
                        The Total Vehicle Capacity.
                        Otherwise Only Half Eligible DA For The Tour Is Payable:
                        @Html.DropDownListFor(m => m.TADARule.ExtraDAApplicability,
                       new[] {
                           new SelectListItem { Text = "Yes", Value = "true" },
                           new SelectListItem { Text = "No", Value = "false" } }, "-",
                       htmlAttributes: new
                       {
                           @class = "form-select pointer myctrl is-valid myctrlw100",
                           @onchange = "validatecontrol()",
                           title = "Accept YES Only"
                       })

                    </li>
                </ol>
            </div>
        </div>
        <div id="Div2" class="col-md-12">
            <div class="bgColor mb-4">
                <div class="col-md-12 form-sample">
                    <label class="d-flex">Category Code & Name :<span></span></label>
                    <div class="form-group">
                        <select id="CategoryDD" onchange="CategoryChanged()"
                                class="form-select myctrl"
                                aria-label="Default select example">
                        </select>
                        @*@Html.ListBoxFor(m => m.TADARule.CategoryIds, new MultiSelectList(Model.Categories, "ID", "DisplayText", Model.SelectedCategoryIds),
                            htmlAttributes: new
                                 {
                                     @multiple = "multiple",
                                @class = "form-select pointer example-getting-started isvalidate2 is-valid"
                            })*@

                    </div>
                </div>
            </div>
            <div class="col-md-12 mb-4">
                <div class="d-flex justify-content-center mt-3">

                    <button id="btnTransDetail" disabled="disabled"
                            type="submit" name="Submit" value="TMDtl"
                            class="btn btn-primary me-2"
                            @*onclick="window.location.href='@Url.Action("CreateTransModeDtls", "TADARules", new { Area = "Security" })';"*@>
                        Transport Mode - Details
                    </button>

                    <button id="btntadaParam" disabled="disabled"
                            type="submit" name="Submit" value="TAParam"
                            class="btn btn-primary"
                            @*onclick="window.location.href='@Url.Action("CreateParam", "TADARules", new { Area = "Security" })';"*@>
                        TA &amp; DA Parameters
                    </button>
                </div>
            </div>
        </div>
        <div id="Div3" class="bgColor bg-transparent content border-red mt-4">
            <ul style="list-style: none; padding: 0; font-size:28px;">
                <li>
                    Are You Sure The Details Entered Are Correct & As Required?
                    <select id="submitConfirmation" disabled
                            onchange="SubmitConfChanged()"
                            class="form-select content border-red myctrlw100 is-invalid"
                            aria-label="Default select example">
                        <option selected value="">-</option>
                        <option value="1">Yes</option>
                        <option value="0">No</option>
                    </select>
                </li>
            </ul>
        </div>
        <div id="Div4" class="col-md-12 mb-4">
            <div class="d-flex justify-content-center mt-3">
                <button id="btnSave" type="submit" name="Submit" value="save"
                        disabled="disabled" style="width:100px;height:45px"
                        class="btn btn-green me-2">
                    <i data-feather="check-circle"></i>
                    Save
                </button>
            </div>
        </div>
    }
</div>
@section headers
    {
    <style>
        .myctrlw100 {
            width: 110px !important; 
        }
    </style>
    
}
@section scripts{
    <script src="~/UIContent/JS/CustomePage/CommonReusable.js"></script>
    <script src="~/UIContent/JS/CustomePage/TADARule/TADARuleEntry.js"></script>
    <script>
        $(document).ready(function () {
                if ('@ViewBag.ErrMsg' != '') {
                    Swal.fire({
                        title: 'Failed to create rule',
                        text: "@ViewBag.ErrMsg",
                        icon: 'warning',
                        customClass: 'swal-wide',
                        buttons: {
                            //cancel: 'Cancel',
                            confirm: 'Ok'
                        },
                        //cancelButtonClass: 'btn-cancel',
                        confirmButtonColor: '#2527a2',
                    });
                };
                if ('@ViewBag.Msg' != '') {
                    Swal.fire({
                        title: 'Confirmation',
                        text: "@ViewBag.Msg",
                        icon: 'success',
                        customClass: 'swal-wide',
                        buttons: {
                            confirm: 'Ok'
                        },
                        confirmButtonColor: '#2527a2',
                    }).then(callback);
                    function callback(result) {
                        if (result.value) {
                            var url = "/Security/TADARules/CreateRule";
                            window.location.href = url;
                        }
                    }
            };
                if ('@ViewBag.SMsg' != '') {
                    Swal.fire({
                        title: 'Confirmation',
                        text: "@ViewBag.SMsg",
                        icon: 'success',
                        customClass: 'swal-wide',
                        buttons: {
                            confirm: 'Ok'
                        },
                        confirmButtonColor: '#2527a2',
                    }).then(callback);
                    function callback(result) {
                        if (result.value) {
                            var url = "/Security/TADARules/Index";
                            window.location.href = url;
                        }
                    }
                };
            });
    </script>
    @*<script src="~/UIContent/JS/CustomePage/CreateRuleTADA.js"></script>
        <script>
            $(document).ready(function () {
                //var mymsg = '@ViewBag.DupMsg';
                if ('@ViewBag.DupMsg' != '') {
                    Swal.fire({
                        title: 'Failed to create rule',
                        text: "@ViewBag.DupMsg",
                        icon: 'warning',
                        customClass: 'swal-wide',
                        buttons: {
                            //cancel: 'Cancel',
                            confirm: 'Ok'
                        },
                        //cancelButtonClass: 'btn-cancel',
                        confirmButtonColor: '#2527a2',
                    });
                };
                if ('@ViewBag.Msg' != '') {
                    Swal.fire({
                        title: 'Confirmation',
                        text: "@ViewBag.Msg",
                        icon: 'success',
                        customClass: 'swal-wide',
                        buttons: {
                            confirm: 'Ok'
                        },
                        confirmButtonColor: '#2527a2',
                    }).then(callback);
                    function callback(result) {
                        if (result.value) {
                            var url = "/Security/TADARules/Index";
                            window.location.href = url;
                        }
                    }
                };
            });
        </script>
        <script>
            $(document).ready(function () {
                var parambtn = $('#IsParamBtn').val();
                if (parambtn == 1) {
                    btnparam.removeAttr("disabled");
                } else {
                    btnparam.attr("disabled", "disabled");
                }
                //$('.EffDt').val('');
                //$('input').css('cursor', 'hand');
            });
        </script>
        <script>
            $(document).ready(function () {
                $('#btnBack').click(function () {
                    var url = "/Security/TADARules/Index";
                    if ($('.is-invalid').length > 0 || $('#IsBtn').val() == 1) {
                        Swal.fire({
                            title: 'Confirmation Message',
                            text: "Are You Sure Want to Go Back?",
                            icon: 'question',
                            customClass: 'swal-wide',
                            //buttons: {
                            //    cancel: 'No',
                            //    confirm: 'Yes'
                            //},
                            confirmButtonText: "Yes",
                            cancelButtonText: "No",
                            cancelButtonClass: 'btn-cancel',
                            confirmButtonColor: '#2527a2',
                            showCancelButton: true,
                        }).then(callback);
                        function callback(result) {
                            if (result.value) {
                                window.location.href = url;
                            } else {
                                // second variant
                            }
                        }
                    } else {
                        window.location.href = url;
                    };
                });
                var dtctrl = $('#EffectiveDate');
                dtctrl.CustomDateFormat();
                if (dtctrl.val() == '0001-01-01') { $('#EffectiveDatelbl').html('Select a date');}
            });
        </script>*@
    @*<script type="text/javascript">

            $(document).ready(function () {
                $(".only-numeric").bind("keypress", function (e) {
                    var keyCode = e.which ? e.which : e.keyCode

                    if (!(keyCode >= 48 && keyCode <= 57)) {
                        $(".error").css("display", "inline");
                        return false;
                    } else {
                        $(".error").css("display", "none");
                    }
                });
                $(".only-decimal").bind("keypress", function (e) {
                    var keyCode = e.which ? e.which : e.keyCode
                    //alert(keyCode);
                    if (!(keyCode >= 48 && keyCode <= 57)) {
                        if (keyCode != 46) { return false; }
                        //$(".error").css("display", "inline");
                    } else {
                        //$(".error").css("display", "none");
                    }
                });
            });

        </script>*@
}


